/*
        Алгоритмы
Задача №1
Есть 2 сковороды для оладьев, каждая из которых вмещает ровно по 1 блинчику за 1 раз.
Есть 3 панкейка (блинчика), которые надо пожарить.
За 1 минуту жарится 1 сторона блинчика.
Блинчики надо обжарить с 2х сторон.
Итерацией считать процесс жарки 1й стороны 2х блинчиков на 2х сковородах. Сколько нужно времени (итераций) при оптимальном распределении чтобы пожарить 3 панкейка?

Релизуйте ваш алгоритм в виде кода. Это может быть как ООП код, так и функциональный и даже процедурный. Выбор подхода обоснуйте.

Обязательно опишите алгоритм, как бы вы решали эту задачу в физическом мире (в какой момент и как жарили бы эти блинчики).
*/


// решение через функцию в данном случае мне кажется самым простым, также его можно проверять при различных количествах сковород и блинчиков

function flameExtra(pan, pancake, side=2, time=1){
    return (time * side * pancake) / pan;
}
let pan = 2; // количество жарящих поверхностей - сковородок
let pancake = 3; // количество блинчиков
let time = 1; // время на жарку одной стороны
let side = 2; // количество сторон для обжарки
console.log(`${flameExtra(pan,pancake,side,time)} iterations`);


// описание решения в физическом мире
/*
    Условно можно обозначить блины:
    A B C
    
    У каждого блинчика по две стороны, их можно обозначать отдельной цифрой:
    A-1 A-2
    B-1 B-2
    C-1 C-2

    Процесс жарки (итерацию) надо провести с двух сторон.
    Первая итерация  может применяться на любой паре блинчиков:
    1) A-1 B-1        Первый и второй блинчик обжарены с стороны 1
    2) B-2 C-1        Первый блинчик обжаривается с стороны 2, третий блинчик обжаривается с стороны 1
    3) A-2 C-2        Второй и третий блинчики обжрариваются с сторон 2

    Блинчики готовы.
*/